===============================
How to Utilise 0-add_integer.py
===============================

This module defines a function that adds integers.
The function is called `add_integer` and has the signature:
add_integer(a, b=98)

How it is used
==============

Import the add_integer function directly from the module
--------------------------------------------------------
>>> add_integer = __import__('0-add_integer').add_integer

Testing with integers
---------------------
>>> add_integer(10, 59)
69

Testing with negative values
----------------------------
>>> add_integer(-20, -5)
-25


Edge Cases
==========

Edge case: Testing with a combination of int and floating-point numbers
-----------------------------------------------------------------------
>>> add_integer(10.5, 5)
15

Edge case: Testing with floating-point numbers
----------------------------------------------
>>> add_integer(10.3, 21.3)
31

Edge case: Testing with only one argument
-----------------------------------------
>>> add_integer(10)
108

Edge case: Testing with both arguments as 0
-------------------------------------------
>>> add_integer(0, 0)
0

Edge case: Testing with a negative and positive number
------------------------------------------------------
>>> add_integer(-5, 5)
0

Edge case: Testing with large integers
--------------------------------------
>>> add_integer(1000000000, 2000000000)
3000000000

Edge case: Testing with non-integer or float input for a
--------------------------------------------------------
>>> add_integer("10o", 5)
Traceback (most recent call last):
TypeError: a must be an integer

Edge case: Testing with non-integer or float input for b
--------------------------------------------------------
>>> add_integer(10, "o5")
Traceback (most recent call last):
TypeError: b must be an integer
